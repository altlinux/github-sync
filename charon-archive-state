#!/bin/sh -efu

. shell-error
. shell-signal

cwd="$(readlink -ev "$0")"
cwd="${0%/*}"

. "$cwd/charon-sh-config"
. "$cwd/charon-sh-functions"

_sort()
{
	if [ "$2" '=' "$3" ]; then
		printf '%s\t%s\n' "$1" "$3"
	elif [ "$2" '<' "$3" ]; then
		printf '%s\t%s\n' "$1" "$3"
	else
		printf '%s\t%s\n' "$1" "$2"
	fi
}

[ -f "$old_state" ] || :> "$old_state"
[ -f "$cur_state" ] || :> "$cur_state"

log 'update state'

export LANG=C

{
	find \
		"$ARCHIVEDIR/srpms" \
		-mindepth 2 -maxdepth 2 -type d -name '*.git' \
		-printf '%f\t%T+\n' > "$TEMPDIR/state.srpms"

	sort -o "$TEMPDIR/state.srpms" "$TEMPDIR/state.srpms"
} &

{
	find \
		"$ARCHIVEDIR/gears" \
		-mindepth 2 -maxdepth 2 -type d -name '*.git' \
		-printf '%f\t%T+\n' > "$TEMPDIR/state.gears"

	sort -o "$TEMPDIR/state.gears" "$TEMPDIR/state.gears"
} &

wait

join -t '	' -j1 -a1 -a2 "$TEMPDIR/state.srpms" "$TEMPDIR/state.gears" |
while IFS='	' read -r n a b; do
	_sort "$n" "${a:-0000-00-00+00:00:00.0000000000}" "${b:-0000-00-00+00:00:00.0000000000}"
done |
	sort -k1,1 -o "$cur_state"

find "$STATEDIR" -type f -name 'state' -exec cat '{}' '+' |
	sort -k1,1 -o "$old_state"

log 'done'
