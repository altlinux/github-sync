#!/bin/sh -efu

. shell-error
. shell-signal

cwd="$(readlink -ev "$0")"
cwd="${0%/*}"

. "$cwd/charon-sh-config"
. "$cwd/charon-sh-functions"

exit_handler()
{
	[ ! -d "$TEMPDIR" ] ||
		find "$TEMPDIR" -mindepth 1 -maxdepth 1 |
			xargs -r rm -rf --
	exit "$1"
}

[ -f "$GITHUB_TOKEN" ] ||
	fatal "github token required"

[ -d "$TEMPDIR"   ] || mkdir -p -- "$TEMPDIR"
[ -d "$LOCKDIR"   ] || mkdir -p -- "$LOCKDIR"
[ -d "$LOGDIR"    ] || mkdir -p -- "$LOGDIR"
[ -d "$STATEDIR"  ] || mkdir -p -- "$STATEDIR"

exec >>"$LOGDIR/$PROG.log" 2>&1

set_cleanup_handler exit_handler

"$0-archive-state"

log 'comparing changed repositories'

MANIFEST="$TEMPDIR/$PROG.repos-updated"
diff \
	--new-line-format='%l
' \
	--old-line-format='' \
	--unchanged-line-format='' \
	-- "$old_state" "$cur_state" > "$MANIFEST" ||:

if [ ! -s "$MANIFEST" ]; then
	log "nothing to do"
	exit 0
fi

log 'push changes in %s repositories' "$(cut -f1 "$MANIFEST" | sort -u | wc -l)"

"$0-github-create" "$MANIFEST"

i=0
while [ "$i" -lt "$MAX_PUSHERS" ]; do
	{
		while IFS='	' read -r repo mtime rtype gitdir; do
			[ -d "$LOCKDIR" ] ||
				exit 0

			if [ -f "$DATADIR/whitelist" ]; then
				grep -F -m 1 -xqs "$repo" "$DATADIR/whitelist" ||
					continue
			fi

			grep -F -m 1 -xqs "$repo" "$DATADIR/github-created" ||
				continue

			if ! mkdir -- "$LOCKDIR/$repo" >/dev/null 2>&1; then
				[ -s "$LOCKDIR/$repo/pusher" ] &&
					read num < "$LOCKDIR/$repo/pusher" &&
					[ "$num" = "$i" ] ||
					continue
			fi
			printf '%s\n' "$i" > "$LOCKDIR/$repo/pusher"

			"$0-pusher" "$i" "$repo" "$mtime" "$rtype" "$gitdir"

		done < "$MANIFEST"

	} >"$LOGDIR/$PROG.$i.log" 2>&1 &

	i=$(($i + 1))
done

wait

rc=0
[ ! -e "$TEMPDIR/failed" ] || rc=1

log 'finished with rc=%s' "$rc"
exit $rc
